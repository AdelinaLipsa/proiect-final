@font-face{
    font-family: Neutrif Pro Bold;
    src:url("./fonts/neutrifpro-bold-webfont.ttf");
}
@font-face{
  font-family: Neutrif Pro Light;
  src:url("./fonts/neutrifpro-light-webfont.ttf");
}
@font-face{
    font-family: Brilliant Regular;
    src:url("./fonts/Brilliant\ signature\ 1\ slant.otf");
}

.bounceInDown{
    font-family: Brilliant Regular;
    font-size: 3em;
    z-index: 1;
    text-align: center;
    position: fixed;
    color:white;
    margin-top: 1.5em;
    margin-bottom: 2em;
    margin-left: 1.5em;
}
.image { 
  position: fixed; 
  margin-left: 5px;
}


#myVideo {
    position: fixed;
    right: 0;
    bottom: 0;
    max-width: 100%; 
    max-height: 100%;
    min-height: 100%;
    max-width: 100% ;
  }

  .sidenav {
    height: 100%;
    width: 16em;
    position: fixed;
    z-index: -1;
    top: 0;
    left: 0;
    padding-top: 20px;
    background-color: white;
  }
  
  .sidenav a{
    text-decoration: none;
    color:black;
    font-family: Neutrif Pro Light;
    font-size: 3em;
    padding: 15px;
}

  #vertical-text {
    writing-mode: vertical-rl;
    margin-left: auto;
    margin-right: auto;
    margin-top: 15em;
}


@mixin transition {
  @for $i from 1 through 50 {
    &:nth-child(#{$i}) {
      transition: transform 1s #{$i * .08}s cubic-bezier(.29,1.4,.44,.96);
    }
  }
}

@mixin alpha-attribute($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

$main: white;
$text: white;
$contrast: darken($main, 20%);

.drawer-list {
  position: fixed;
  right: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  transform: translate(100vw, 0);
  /* ie workaround */
  -ms-transform: translatex(-100vw);
  box-sizing: border-box;
  pointer-events: none;
  padding-top: 125px;
  transition: width 475ms ease-out, transform 450ms ease, border-radius .8s .1s ease;
  border-bottom-left-radius: 100vw;
  @include alpha-attribute('background-color', rgba($contrast, 0.8), white);
  @media (min-width: 768px) {
    width: 15em;
  }
  ul {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    overflow: auto;
    overflow-x: hidden;
    pointer-events: auto;
  }
  li {
    list-style: none;
    text-transform: uppercase;
    pointer-events: auto;
    white-space: nowrap;
    box-sizing: border-box;
    transform: translatex(100vw);
    /* ie workaround */
    -ms-transform: translatex(-100vw);
    &:last-child {
      margin-bottom: 2em;
    }
    a {
      text-decoration: none;
      color: $text;
      text-align: center;
      display: block;
      padding: 1rem;
      font-size: calc(34px - .5vw);
      @media (min-width: 768px) {
        text-align: right;
        padding: .5rem;
      }
      &:hover {
        cursor: pointer;
        @include alpha-attribute('background-color', rgba($main, 0.5), white);
      }
    }
  }
}

input.hamburger {
  display: none;
  &:checked {
    & ~ .drawer-list {
       transform: translatex(0);
        border-bottom-left-radius: 0;
        li {
          transform: translatex(0);
          @include transition;
          a {
            padding-right: 15px;
          }
        }
    }
    & ~ label {
      > i {
        background-color: transparent;
        transform: rotate(90deg);
        &:before {
          transform: translate(-50%, -50%) rotate(315deg);
        }
        &:after {
          transform: translate(-50%, -50%) rotate(-315deg);
        }
      }
      close {
        color: $text;
        width: 100%;
      }
      open {
        color: rgba(0, 0, 0, 0);
        width: 0;
      }
    }
  }
}

label.hamburger {
  z-index: 99999999;
  position: relative;
  display: block;
  height: 50px;
  width: 50px;
  &:hover {
    cursor: pointer;
  }
  text {
    close,
    open {
      text-transform: uppercase;
      font-size: .8em;
      align-content: center;
      position: absolute;
      transform: translateY(50px);
      text-align: center;
      overflow: hidden;
      transition: width .25s .35s, color .45s .35s;
    }
    close {
      color: rgba(0, 0, 0, 0);
      right: 0;
      width: 0;
    }
    open {
      color: $text;
      width: 100%;
    }
  }
  > i {
    position: absolute;
    width: 100%;
    height: 2px;
    top: 50%;
    background-color: $text;
    pointer-events: auto;
    transition-duration: .35s;
    transition-delay: .35s;
    &:before,
    &:after {
      position: absolute;
      display: block;
      width: 100%;
      height: 2px;
      left: 50%;
      background-color: $text;
      content: "";
      transition: transform 0.35s;
      transform-origin: 50% 50%;
    }
    &:before {
      transform: translate(-50%, -14px);
    }
    &:after {
      transform: translate(-50%, 14px);
    }
  }
}

label.hamburger {
  position: fixed;
  top: 15px;
  right: 15px;
}
